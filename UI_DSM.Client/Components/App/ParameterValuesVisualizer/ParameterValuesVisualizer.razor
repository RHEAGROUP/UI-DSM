<!--------------------------------------------------------------------------------------------------------
// ParameterValuesVisualizer.razor
// Copyright (c) 2022 RHEA System S.A.
// 
// Author: Antoine Théate, Sam Gerené, Alex Vorobiev, Alexander van Delft, Martin Risseeuw, Nabil Abbar
// 
// This file is part of UI-DSM. 
// The UI-DSM web application is used to review an ECSS-E-TM-10-25 model.
// 
// The UI-DSM application is provided to the community under the Apache License 2.0.
-------------------------------------------------------------------------------------------------------->
@using CDP4Common.SiteDirectoryData

@if (this.hasMultipleValues)
{
	<DxPopup @ref=@this.Popup HeaderText="Values Visualizer" ShowFooter="false">
		<Content>
			@this.Parameter.ParameterType.Name
			@if (this.Parameter.StateDependence == null)
			{
				if (this.Parameter.ParameterType is ScalarParameterType)
				{
					if (this.Parameter.Scale != null)
					{
						<span> (@this.Parameter.Scale.ShortName) </span>
					}
					<ScalarValuesVisualizer Parameter="@this.Parameter" Option="@this.Option" State="null"/>
				}
				else
				{
					<CompoundValuesVisualizer Parameter="@this.Parameter" Option="@this.Option" State="null"/>
				}
			}
			else
			{
				if (this.Parameter.ParameterType is ScalarParameterType && this.Parameter.Scale != null)
				{
					<span> (@this.Parameter.Scale.ShortName) </span>
				}
				foreach (var actualFiniteState in this.Parameter.StateDependence.ActualState)
				{
					if (this.Parameter.ParameterType is ScalarParameterType)
					{
						<ScalarValuesVisualizer Parameter="@this.Parameter" Option="@this.Option" State="actualFiniteState"/>
					}
					else
					{
						<CompoundValuesVisualizer Parameter="@this.Parameter" Option="@this.Option" State="actualFiniteState"/>
					}
				}
			}
		</Content>
	</DxPopup>
}

<div class="app-key-value">
	<span class="app-key-value__key">@(this.Parameter.ParameterType.Name)</span>
	<span class="app-key-value__value">
		@{
			@this.displayValue
			if (this.hasMultipleValues)
			{
				<button @onclick="@this.OpenPopup" class="more">more</button>
			}
		}
	</span>
</div>