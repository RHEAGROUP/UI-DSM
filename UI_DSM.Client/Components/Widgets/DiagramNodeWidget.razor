<!--------------------------------------------------------------------------------------------------------
// DiagramNodeWidget.razor
// Copyright (c) 2022 RHEA System S.A.
//
// Author: Antoine Théate, Sam Gerené, Alex Vorobiev, Alexander van Delft, Jaime Bernar
//
// This file is part of UI-DSM.
// The UI-DSM web application is used to review an ECSS-E-TM-10-25 model.
//
// The UI-DSM application is provided to the community under the Apache License 2.0.
-------------------------------------------------------------------------------------------------------->
@using Blazor.Diagrams.Components.Renderers
@using Blazor.Diagrams.Core.Models

@using UI_DSM.Client.Model

<div @ref="this.DivReference" class="default-node custom-node @(this.Node.IsCentralNode ? "central-node" : "") @(Node.Selected ? "selected" : "") @this.OverClass @this.ShapeClass"
     @onmouseover="@((e) => this.OverClass = "over")"
     @onmouseout="@((e) =>  this.OverClass = string.Empty)">

    @(this.Node.Title ?? "Title")

    @{
        var nodePorts = this.Node.Ports.Cast<DiagramPort>();
        var i = 0;
        if(this.Points.Count == nodePorts.Count())
        {
            foreach (var port in nodePorts)
            {
                var posx = this.Points[i].X.ToString() + "px";
                var posy = this.Points[i].Y.ToString() + "px";

                <div style="left:@posx; top:@posy; position:absolute;" trans>
                    <PortRenderer Port="port"
                      Class="@(port.HasComments ? "port-comment custom-port" : "custom-port")">
                        <div class="@(port.Direction.ToString())"></div>
                    </PortRenderer>
                </div>
                i++;
            }
        }
        else{

            foreach (var port in nodePorts)
            {
                <PortRenderer Port="port"
                  Class="@(port.HasComments ? "port-comment custom-port" : "custom-port")">
                    <div class="@(port.Direction.ToString())"></div>
                </PortRenderer>
            }
        }
    }

    @if (this.Node.HasComments)
    {
        <div class="node-comment"></div>
    }
</div>
