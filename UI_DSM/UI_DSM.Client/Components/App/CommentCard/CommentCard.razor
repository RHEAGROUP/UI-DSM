<!--------------------------------------------------------------------------------------------------------
// CommentCard.razor
// Copyright (c) 2022 RHEA System S.A.
//
// Author: Antoine Théate, Sam Gerené, Alex Vorobiev, Alexander van Delft, Martin Risseeuw
//
// This file is part of UI-DSM.
// The UI-DSM web application is used to review an ECSS-E-TM-10-25 model.
//
// The UI-DSM application is provided to the community under the Apache License 2.0.
-------------------------------------------------------------------------------------------------------->
@inherits SelectableComponent

<div class="app-comment">
	<div @onclick="this.OnClickEvent">
		<div class="app-comment__header">
			@if (this.IsSelected)
			{
				<FeatherMessageCircle Size="24" Color="currentColor" StrokeWidth="1.5f" @onclick="this.ViewModel.OnReplyCallback"/>
				@if (this.ViewModel.IsAllowedToEdit)
				{
					<FeatherEdit Size="24" Color="currentColor" StrokeWidth="1.5f" @onclick="this.OnContentEditClick"/>
					<FeatherTrash2 Size="24" Color="currentColor" StrokeWidth="1.5f" @onclick="this.OnDeleteClick"/>
				}
				<button id="dropdownButton" @onclick="() => this.IsOnStatusUpdateMode = true">Mark as :</button>
				<DxDropDown @bind-IsOpen="@(this.IsOnStatusUpdateMode)"
				            Width="200"
				            PositionTarget="#dropdownButton"
				            PositionMode="DropDownPositionMode.Bottom">
					<BodyTemplate>
						@foreach (var status in AvailableStatus)
						{
							<div id="@status.ToString()" @onclick="() => this.ViewModel.UpdateStatus(status)">
								@if (this.ViewModel.Comment.Status == status)
								{
									<FeatherCheck Size="20" Color="currentColor"/>
								}
								@status
							</div>
						}
					</BodyTemplate>
				</DxDropDown>
			}
		</div>

		<div class="app-comment__body">
			<span class="app-comment__title">
				<span class="app-comment__name">@(this.ViewModel.Comment.Author.User.UserName)</span>
				<span class="app-comment__date">@(this.ViewModel.Comment.CreatedOn)</span>
			</span>
			<span class="app-comment__description">@((MarkupString)this.ViewModel.Comment.Content)</span>
		</div>
	</div>

	@if (this.IsSelected)
	{
		@if (this.ViewModel.Comment.Replies.Any())
		{
			<AppAccordion Label="Replies">
				@foreach (var reply in this.ViewModel.Comment.Replies.OrderBy(x => x.CreatedOn))
				{
					<ReplyCard ViewModel="@(this.CreateReplyCardViewModel(reply))" OnClick="@(this.OnReplyCardClick)"/>
				}
			</AppAccordion>
		}
	}
</div>