<!--------------------------------------------------------------------------------------------------------
// TrlView.razor
// Copyright (c) 2022 RHEA System S.A.
// 
// Author: Antoine Théate, Sam Gerené, Alex Vorobiev, Alexander van Delft, Martin Risseeuw, Nabil Abbar
// 
// This file is part of UI-DSM. 
// The UI-DSM web application is used to review an ECSS-E-TM-10-25 model.
// 
// The UI-DSM application is provided to the community under the Apache License 2.0.
-------------------------------------------------------------------------------------------------------->
@using UI_DSM.Client.ViewModels.Components.NormalUser.Views.RowViewModel
@using DataGridSelectionMode = Radzen.DataGridSelectionMode
@using UI_DSM.Client.Extensions
@inherits ElementBreakdownStructureView<UI_DSM.Client.ViewModels.Components.NormalUser.Views.IProductBreakdownStructureViewViewModel>

@if (!this.ViewModel.TopElement.Any())
{
	<LoadingComponent IsLoading="this.IsLoading">
	<p>TopElement of the Model is not set, can not compute the TRL View</p>
	</LoadingComponent>
}
else
{
	<div class="view-actions">
		<div class="left-actions"></div>
		<div class="right-actions">
			<OptionChooser ViewModel="this.ViewModel.OptionChooserViewModel"/>
			<Filter ViewModel="this.ViewModel.FilterViewModel" Id="row">
				<FeatherFilter Size="20" Color="currentColor" StrokeWidth="2"/> <span>Filter</span>
			</Filter>
			<ColumnChooser TItem="ElementBaseRowViewModel" ViewModel="@this.ColumnChooser"/>
		</div>
	</div>
	<RadzenDataGrid @ref="@this.Grid" Data="@(this.ViewModel.TopElement)" TItem="ElementBaseRowViewModel" ExpandMode="DataGridExpandMode.Single"
	                RowRender="@this.RowRender" LoadChildData="@this.LoadChildren" SelectionMode="DataGridSelectionMode.Single" RowSelect="@this.SelectRow"
	                AllowFiltering="true" FilterMode="FilterMode.SimpleWithMenu" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
	                LogicalFilterOperator="LogicalFilterOperator.Or">
		<Columns>
			<LoadingComponent IsLoading="this.IsLoading">
			<RadzenDataGridColumn TItem="ElementBaseRowViewModel" Property="@nameof(ElementBaseRowViewModel.Name)" Title="Name">
				<Template Context="data">
					<div>
						<HaveThingRowIcons Row="data"/>
						@data.Name
					</div>
				</Template>
			</RadzenDataGridColumn>
			<RadzenDataGridColumn TItem="ElementBaseRowViewModel" Property="@nameof(ProductRowViewModel.TrlValue)" Title="TRL">
				<Template Context="data">
					@if (data is ProductRowViewModel product && product.Thing.ShouldHaveTechnologyParameter())
					{
						<p>@product.TrlValue</p>
					}
				</Template>
			</RadzenDataGridColumn>
			</LoadingComponent>
		</Columns>
	</RadzenDataGrid>
}