<!--------------------------------------------------------------------------------------------------------
// MainLayout.razor
// Copyright (c) 2022 RHEA System S.A.
// 
// Author: Antoine Théate, Sam Gerené, Alex Vorobiev, Alexander van Delft
// 
// This file is part of UI-DSM. 
// The UI-DSM web application is used to review an ECSS-E-TM-10-25 model.
// 
// The UI-DSM application is provided to the community under the Apache License 2.0.
-------------------------------------------------------------------------------------------------------->

@inherits LayoutComponentBase
@namespace AppComponents

<div class="default-layout">
    <div class="default-layout__top-bar">
        <TopMenu />
    </div>

    <div class="default-layout__main default-layout__main @layoutClass">
        <aside class="default-layout__sidebar default-layout__sidebar__left">
					<AuthorizeView>
						<Authorized>
							<div class="sidebar__header">Tasks</div>	
							<TaskItem TaskTitle="Check the requirements specification" isDone="true" TaskDescription="Lorem ipsum dolor sit amet, consectetur adipiscing elit." />
							<TaskItem TaskTitle="Check the requirements specification" TaskDescription="Lorem ipsum dolor sit amet, consectetur adipiscing elit." />
							<TaskItem TaskTitle="Check the requirements specification" isDone="true" TaskDescription="Lorem ipsum dolor sit amet, consectetur adipiscing elit." />
						</Authorized>
					</AuthorizeView>
        </aside>

        <div class="default-layout__body">
            @(this.Body)
        </div>
        
        <aside  class="default-layout__sidebar default-layout__sidebar__right">
            <div class="sidebar__header">Comments</div>
        </aside>
    </div>
</div>

@code {
	@inject NavigationManager NavigationManager

	[CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }

	protected async override Task OnInitializedAsync()
	{
			base.OnInitialized();
			var user = (await AuthStat).User;
			if(!user.Identity.IsAuthenticated)
			{
					NavigationManager.NavigateTo("/login");
			}
	}
	
	private bool tasksActive = false;
	private bool commentsActive = false;
	private string layoutClass = "";


	protected override void OnInitialized()
	{
		this.GetLayoutClass();
		base.OnInitialized();
		this.StateHasChanged();
	} 

	private void GetLayoutClass() {
		if(this.tasksActive && this.commentsActive)
		{
			this.layoutClass = "default-layout__main-both-sidebars";
		}
		else if(this.tasksActive)
		{
			this.layoutClass = "default-layout__main-left-sidebar";
		}else if(this.commentsActive)
		{
			this.layoutClass = "default-layout__main-right-sidebar";
		}
		else
		{
			this.layoutClass = "default-layout__main--no-sidebars";
		}
	}
}